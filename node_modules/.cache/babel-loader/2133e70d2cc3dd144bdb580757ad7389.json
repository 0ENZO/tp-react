{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/enzo/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport SecondApi from \"./SecondApi\";\n\nfunction App() {\n  _s();\n\n  /*\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n  */\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  const [users, setUsers] = useState([]);\n\n  const fetchItems = async () => {\n    const users_data = await fetch('https://jsonplaceholder.typicode.com/users');\n    const todos_data = await fetch('https://jsonplaceholder.typicode.com/todos');\n    const users = await users_data.json();\n    const todos = await todos_data.json();\n    let userId;\n\n    for (let i = 0; i < users.length; i++) {\n      userId = users[i]['id'];\n      users[i]['todos'] = [];\n      console.log(users[i]);\n\n      for (let j = 0; j < todos.length; j++) {\n        if (todos[j]['userId'] === userId) {\n          users[i].todos.push(todos[j]);\n        }\n      }\n    }\n\n    setUsers(users);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Users page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-stripped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Todo count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [user.todos.length, \" todos\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/user/${user.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn btn-warning\",\n                children: \"More\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 27\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Modal, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 23\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"NflvsEOEDqehVwrbw7GR+NwWtIQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/enzo/my-app/src/App.js"],"names":["SecondApi","App","useEffect","fetchItems","users","setUsers","useState","users_data","fetch","todos_data","json","todos","userId","i","length","console","log","j","push","map","user","id","username","email"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport SecondApi from \"./SecondApi\"\n\nfunction App() {\n  /*\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n  */\n useEffect(() => {\n  fetchItems();\n}, []);\n\nconst [users, setUsers] = useState([]);\n\nconst fetchItems = async () => {\n  const users_data = await fetch(\n      'https://jsonplaceholder.typicode.com/users'\n  );\n\n  const todos_data = await fetch(\n    'https://jsonplaceholder.typicode.com/todos'\n  );\n\n  const users = await users_data.json();\n  const todos = await todos_data.json();\n\n  let userId;\n  for(let i = 0; i < users.length; i++) {\n      userId = users[i]['id'];\n      users[i]['todos'] = [];\n      console.log(users[i]);\n      for(let j = 0; j < todos.length; j++) {\n          if(todos[j]['userId'] === userId) {\n              users[i].todos.push(todos[j])\n          }\n      }\n  }\n\n  setUsers(users);\n}\n\nreturn (\n  <div>\n      <h1 className=\"mb-4\">Users page</h1>\n\n      <table className=\"table table-stripped\">\n          <thead>\n              <tr>\n                  <th>#</th>\n                  <th>Username</th>\n                  <th>Email</th>\n                  <th>Todo count</th>\n                  <th>Details</th>\n              </tr>\n          </thead>\n          <tbody>\n              {users.map(user => (\n                  <tr key={user.id}>\n                      <td>{user.id}</td>\n                      <td>{user.username}</td>\n                      <td>{user.email}</td>\n                      <td>{user.todos.length} todos</td>\n                      <td>\n                          <Link to={`/user/${user.id}`}>\n                              <span className=\"btn btn-warning\">More</span>\n                          </Link>\n                          &nbsp;\n                          <Modal user={user} />\n                      </td>\n                  </tr>\n              ))}\n          </tbody>\n      </table>\n  </div>\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}