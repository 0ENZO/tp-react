{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/enzo/my-app/src/SecondApi.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nfunction Users() {\n  _s();\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  const [users, setUsers] = useState([]);\n  const [getAnime, setAnime] = useState();\n\n  const fetchItems = async () => {\n    const url = 'https://api.jikan.moe/v3/search/anime?limit=1&q=';\n    const param = search;\n    const response = await fetch(`${url}/${param}`);\n    const result = await response.json();\n    result && setAnime(true);\n    const users = await users_data.json();\n    const todos = await todos_data.json();\n    let userId;\n\n    for (let i = 0; i < users.length; i++) {\n      userId = users[i]['id'];\n      users[i]['todos'] = [];\n      console.log(users[i]);\n\n      for (let j = 0; j < todos.length; j++) {\n        if (todos[j]['userId'] === userId) {\n          users[i].todos.push(todos[j]);\n        }\n      }\n    }\n\n    setUsers(users);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Users page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-stripped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Todo count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [user.todos.length, \" todos\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Users, \"ZBq9yJqUVRhZTNvSYkhjoRmp3o8=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/enzo/my-app/src/SecondApi.js"],"names":["useEffect","useState","Users","fetchItems","users","setUsers","getAnime","setAnime","url","param","search","response","fetch","result","json","users_data","todos","todos_data","userId","i","length","console","log","j","push","map","user","id","username","email"],"mappings":"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","sourcesContent":["import {useEffect, useState} from \"react\";\n\nfunction Users() {\n\n    useEffect(() => {\n        fetchItems();\n    }, []);\n\n    const [users, setUsers] = useState([])\n    const [getAnime, setAnime] = useState();\n\n    const fetchItems = async () => {\n        const url = 'https://api.jikan.moe/v3/search/anime?limit=1&q='\n        const param = search;\n        const response = await fetch(`${url}/${param}`);\n        const result = await response.json();\n        result && setAnime(true);\n\n        const users = await users_data.json();\n        const todos = await todos_data.json();\n\n        let userId;\n        for(let i = 0; i < users.length; i++) {\n            userId = users[i]['id'];\n            users[i]['todos'] = [];\n            console.log(users[i]);\n            for(let j = 0; j < todos.length; j++) {\n                if(todos[j]['userId'] === userId) {\n                    users[i].todos.push(todos[j])\n                }\n            }\n        }\n\n        setUsers(users);\n    }\n\n    return (\n        <div>\n            <h1 className=\"mb-4\">Users page</h1>\n\n            <table className=\"table table-stripped\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Username</th>\n                        <th>Email</th>\n                        <th>Todo count</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {users.map(user => (\n                        <tr key={user.id}>\n                            <td>{user.id}</td>\n                            <td>{user.username}</td>\n                            <td>{user.email}</td>\n                            <td>{user.todos.length} todos</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}